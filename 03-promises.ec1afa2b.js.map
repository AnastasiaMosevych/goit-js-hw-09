{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAYC,SAASC,cAAc,yBACnCC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAyB3C,SAASI,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAE1BA,EAAM,G,CAhCbR,EAAUe,iBAAiB,SAE3B,SAAsBC,GACpBA,EAAEC,iBACF,MAAMC,EAAaC,OAAOhB,EAAWiB,OAC/BC,EAAYF,OAAOf,EAAUgB,OAC7BE,EAASH,OAAOd,EAAYe,OAClC,IAAIZ,EAAQW,OAAOD,GACnB,IAAK,IAAIX,EAAW,EAAGA,GAAYe,EAAQf,IAAY,CACrD,MAAMgB,EAAUjB,EAAcC,EAAUC,GACxCA,GAAgBa,EAChBE,EACGC,MACCJ,IACEK,EAAA3B,GAAS4B,OAAOC,QAAQ,qBAAqBP,EAAMb,eAAea,EAAMZ,UAAU,IAGrFoB,OAAMC,IACLJ,EAAA3B,GAAS4B,OAAOI,QAAQ,oBAAoBD,EAAMtB,eAAesB,EAAMrB,UAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst submitBtn = document.querySelector(\"button[type='submit']\");\nconst delayInput = document.querySelector(\"input[name='delay']\");\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\n\nsubmitBtn.addEventListener('click', handleSubmit);\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n  const firstDelay = Number(delayInput.value);\n  const delayStep = Number(stepInput.value);\n  const amount = Number(amountInput.value); \n  let delay = Number(firstDelay);\n  for (let position = 1; position <= amount; position++) {\n    const promise = createPromise(position, delay);\n    delay = delay + delayStep;\n    promise\n      .then(\n        value => {\n          Notiflix.Notify.success(`Fulfilled promise ${value.position} in ${value.delay}ms`);\n       },\n      )\n      .catch(error => {\n        Notiflix.Notify.failure(`Rejected promise ${error.position} in ${error.delay}ms`);\n      })\n  }\n};\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  });\n  return promise;\n};\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$submitBtn","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","firstDelay","Number","value","delayStep","amount","promise","then","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.ec1afa2b.js.map"}